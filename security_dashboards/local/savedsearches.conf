[UC01 - Unusual amount of authentication failures]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */30 * * * *
dispatch.earliest_time = -30m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Capture NTLM and Kerberos Failed Authentication (4625 can be included but may cause duplicates) ```\
`windows_event_index` source="wineventlog:security" \
  (\
  	(EventCode=4771 Failure_Code=0x18) \
  	OR (EventCode=4776 Error_Code=0xC000006A)\
  	``` OR (EventCode=4625 Status=0xC000006A) ```\
  )\
``` Custom CIM Field Handling ```\
| eval src_user=coalesce(src_user,user)\
| eval src_ip=replace(src_ip,"\:\:ffff\:","")\
| eval src_nt_domain=coalesce(src_nt_domain,coalesce(Supplied_Realm_Name,""))\
``` Alert Details ```\
| eval alert_name="UC01 - Many Failed Logins Per User"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Credential Access"\
| eval mitre_technique="Brute Force: Password Guessing" \
| eval mitre_technique_id="T1110.001"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Count by Field  ```\
| stats first(_time) AS _time,\
first(indextime) AS indextime\
first(eventtime) AS eventtime\
first(alert_level) AS alert_level\
first(alert_name) AS alert_name\
first(customer) AS customer\
first(source) AS source\
list(action) AS action\
list(app) AS app\
list(signature_id) AS signature_id\
list(event_id) AS event_id\
list(session_id) AS session_id\
list(signature) AS signature\
list(severity) AS severity\
list(result_id) AS result_id\
list(change_type) AS change_type\
list(duration) AS duration\
list(bytes) AS bytes\
list(bytes_in) AS bytes_in\
list(bytes_out) AS bytes_out\
list(description) AS description\
list(dvc) AS dvc\
list(src_host) AS src_host\
```list(src_nt_domain) AS src_nt_domain```\
```list(src_user) AS src_user```\
list(src_ip) AS src_ip\
list(src_port) AS src_port\
list(src_mac) AS src_mac\
list(dest_host) AS dest_host\
list(dest_nt_domain) AS dest_nt_domain\
list(dest_user) AS dest_user\
list(dest_ip) AS dest_ip\
list(dest_port) AS dest_port\
list(dest_mac) AS dest_mac\
list(process) AS process\
list(process_id) AS process_id\
list(process_name) AS process_name\
list(process_hash) AS process_hash\
list(parent_process) AS parent_process\
list(parent_process_id) AS parent_process_id\
list(parent_process_name) AS parent_process_name\
list(parent_process_hash) AS parent_process_hash\
list(object_path) AS object_path\
list(object_attrs) AS object_attrs\
list(registry_path) AS registry_path\
list(registry_value_name) AS registry_value_name\
list(registry_value_data) AS registry_value_data\
list(service_name) AS service_name\
list(transport) AS transport\
list(protocol) AS protocol\
list(url) AS url\
list(md5) AS md5\
list(sha1) AS sha1\
first(mitre_category) AS mitre_category\
first(mitre_technique) AS mitre_technique\
first(mitre_technique_id) AS mitre_technique_id\
list(raw) AS raw\
count AS eventcount\
by src_user, src_nt_domain\
``` Filter by Min Event Count ```\
| where eventcount > 5\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC02 - Audit log cleared]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Event Log Cleared ```\
`windows_event_index` source="wineventlog:security"  EventCode=1102\
``` Alert Details ```\
| eval alert_name="UC02 - Event Log Cleared"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Defense Evasion"\
| eval mitre_technique="Clear Windows Event Logs" \
| eval mitre_technique_id="T1070.001"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC03 - Netlogon service allowed insecure channel]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` ZeroLogon Indicator ```\
`windows_event_index` source="wineventlog:system"  EventCode=5829\
``` Alert Details ```\
| eval alert_name="UC03 - Netlogon service allowed insecure channel"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Lateral Movement"\
| eval mitre_technique="Exploitation of Remote Services" \
| eval mitre_technique_id="T1210"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC04 - Improperly signed image loaded into kernel]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Improper Code Signing ```\
`windows_event_index` source="wineventlog:security"  EventCode=6281\
``` Alert Details ```\
| eval alert_name="UC04 - Improperly signed image loaded into kernel"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Defense Evasion"\
| eval mitre_technique="Code Signing" \
| eval mitre_technique_id="T1553.002"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC05 - Corrupt Image Loaded]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Corrupt Image ```\
`windows_event_index` source="wineventlog:security"  EventCode=5038\
``` Alert Details ```\
| eval alert_name="UC05 - Corrupt image loaded"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Defense Evasion"\
| eval mitre_technique="Process Hollowing" \
| eval mitre_technique_id="T1055.012"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC06 - User account locked out]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Account Lockout ```\
`windows_event_index` source="wineventlog:security"  EventCode=4740\
``` Custom CIM Field Handling ```\
| eval dest_user=coalesce(dest_user,user)\
``` Alert Details ```\
| eval alert_name="UC06 - User account locked out"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Credential Access"\
| eval mitre_technique="Brute Force" \
| eval mitre_technique_id="T1110"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC07 - Explicit creds used for logon]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Explicit Creds ```\
`windows_event_index` source="wineventlog:security"  EventCode=4648\
``` Custom CIM Field Handling ```\
| eval dest_user=coalesce(dest_user,user)\
``` Alert Details ```\
| eval alert_name="UC07 - Explicit creds used for logon"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Credential Access"\
| eval mitre_technique="Brute Force" \
| eval mitre_technique_id="T1110"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC08 - Multiple password changes for different users from the same]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */60 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Multiple Password Resets ```\
`windows_event_index` source="wineventlog:security"  EventCode=4724\
``` Custom CIM Field Handling ```\
| eval dest_user=coalesce(dest_user,user)\
``` Alert Details ```\
| eval alert_name="UC08 - Multiple password changes for different users from the same source"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Persistence"\
| eval mitre_technique="Account Manipulation" \
| eval mitre_technique_id="T1098"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Count by Field  ```\
| stats first(_time) AS _time,\
first(indextime) AS indextime\
first(eventtime) AS eventtime\
first(alert_level) AS alert_level\
first(alert_name) AS alert_name\
first(customer) AS customer\
first(source) AS source\
list(action) AS action\
list(app) AS app\
list(signature_id) AS signature_id\
list(event_id) AS event_id\
list(session_id) AS session_id\
list(signature) AS signature\
list(severity) AS severity\
list(result_id) AS result_id\
list(change_type) AS change_type\
list(duration) AS duration\
list(bytes) AS bytes\
list(bytes_in) AS bytes_in\
list(bytes_out) AS bytes_out\
list(description) AS description\
list(dvc) AS dvc\
list(src_host) AS src_host\
```list(src_nt_domain) AS src_nt_domain```\
```list(src_user) AS src_user```\
list(src_ip) AS src_ip\
list(src_port) AS src_port\
list(src_mac) AS src_mac\
list(dest_host) AS dest_host\
list(dest_nt_domain) AS dest_nt_domain\
list(dest_user) AS dest_user\
list(dest_ip) AS dest_ip\
list(dest_port) AS dest_port\
list(dest_mac) AS dest_mac\
list(process) AS process\
list(process_id) AS process_id\
list(process_name) AS process_name\
list(process_hash) AS process_hash\
list(parent_process) AS parent_process\
list(parent_process_id) AS parent_process_id\
list(parent_process_name) AS parent_process_name\
list(parent_process_hash) AS parent_process_hash\
list(object_path) AS object_path\
list(object_attrs) AS object_attrs\
list(registry_path) AS registry_path\
list(registry_value_name) AS registry_value_name\
list(registry_value_data) AS registry_value_data\
list(service_name) AS service_name\
list(transport) AS transport\
list(protocol) AS protocol\
list(url) AS url\
list(md5) AS md5\
list(sha1) AS sha1\
first(mitre_category) AS mitre_category\
first(mitre_technique) AS mitre_technique\
first(mitre_technique_id) AS mitre_technique_id\
list(raw) AS raw\
count AS eventcount\
dc(dest_user) AS distinct_users\
by src_user, src_nt_domain\
``` Filter by Min Event Count ```\
| where eventcount >= 1 AND distinct_users > 1\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC09 - Firewall incoming application traffic blocked]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Firewall Blocked Application Listener ```\
`windows_event_index` source="wineventlog:security"  EventCode=5031\
``` Custom CIM Field Handling ```\
| eval process=coalesce(process,Application)\
``` Alert Details ```\
| eval alert_name="UC09 - Firewall incoming application traffic blocked"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Command and Control"\
| eval mitre_technique="Application Layer Protocol" \
| eval mitre_technique_id="T1071"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC10 - Windows Security-Group Policy settings for Windows Firewall has changed]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Firewall Policy Changed ```\
`windows_event_index` source="wineventlog:security"  EventCode=4954\
``` Custom CIM Field Handling ```\
| eval process=coalesce(process,Application)\
``` Alert Details ```\
| eval alert_name="UC10 - Group Policy settings for Windows Firewall has changed"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Command and Control"\
| eval mitre_technique="Application Layer Protocol" \
| eval mitre_technique_id="T1071"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC11 - Password Hash for an account accessed]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Password Hash Access ```\
`windows_event_index` source="wineventlog:security"  EventCode=4782\
``` Alert Details ```\
| eval alert_name="UC11 - Password Hash for an account accessed"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Credential Access"\
| eval mitre_technique="OS Credential Dumping" \
| eval mitre_technique_id="T1003"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC12 - A rule was added to windows firewall exception list]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Firewall Modification ```\
`windows_event_index` source="wineventlog:security"  EventCode=4946\
``` Alert Details ```\
| eval alert_name="UC12 - A rule was added to windows firewall exception list"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Command and Control"\
| eval mitre_technique="Application Layer Protocol" \
| eval mitre_technique_id="T1071"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC13 - A rule was modified to windows firewall exception list, Event code 4947]
disabled = 1
action.email.show_password = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Firewall Modification ```\
`windows_event_index` source="wineventlog:Microsoft-Windows-Windows Firewall With Advanced Security/Firewall"  EventCode=2005\
``` Custom CIM Field Handling ```\
| eval parent_process=coalesce(parent_process,Modifying_Application)\
| eval process=coalesce(process,Application)\
| eval protocol=coalesce(protocol,Protocol)\
``` Alert Details ```\
| eval alert_name="UC12 - A rule was added to windows firewall exception list"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Command and Control"\
| eval mitre_technique="Application Layer Protocol" \
| eval mitre_technique_id="T1071"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC14 - A setting was changed in windows firewall]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Firewall Setting Change ```\
`windows_event_index` source="wineventlog:security"  EventCode=4950\
``` Alert Details ```\
| eval alert_name="UC13 - A setting was changed in windows firewall"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Defense Evasion"\
| eval mitre_technique="Impair Defenses" \
| eval mitre_technique_id="T1562"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[UC15 - Windows registry modified]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = ``` Windows Registry Modification ```\
`windows_event_index` source="wineventlog:security"  EventCode=4657\
``` Alert Details ```\
| eval alert_name="UC14 - Windows registry modified"\
| eval alert_level="RED"\
| eval customer="`customer_name`"\
``` MITRE Details (if applicable) ```\
| eval mitre_category="Defense Evasion"\
| eval mitre_technique="Impair Defenses" \
| eval mitre_technique_id="T1562"\
``` Capture RAW and INDEXTIME  ```\
| eval indextime = _indextime \
| eval raw = _raw \
| eval eventtime=_time\
| convert ctime(indextime) \
| convert ctime(eventtime)\
``` Return CIM Fields Only  ```\
| fields  _time, indextime, eventtime, alert_level, alert_name, customer, action, app, source, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
``` Fill NULL Fields With Empty String And Lower Case All Values  ```\
| fillnull value=""\
| foreach * \
    [ \
    eval <<FIELD>>=if('<<FIELD>>'!=raw,lower(<<FIELD>>),<<FIELD>>)\
    ]\
``` Table Format Results  ```\
| table _time, indextime, alert_level, alert_name, customer, source, action, app, signature_id, event_id, session_id, signature, severity, result_id, change_type, duration, bytes, bytes_in, bytes_out, description, dvc, src_host, src_nt_domain, src_user, src_ip, src_port, src_mac, dest_host, dest_nt_domain, dest_user, dest_ip, dest_port, dest_mac, process, process_id, process_name, process_hash, parent_process, parent_process_id, parent_process_name, parent_process_hash, object_path, object_attrs, registry_path, registry_value_name, registry_value_data, service_name, transport, protocol, url, md5, sha1, eventcount, mitre_category, mitre_technique, mitre_technique_id, raw\
|  collect `securityevents_windows_alert`

[ActiveDirectory - Admin Group Recursive Membership (Enterprise Admins)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Enterprise Admins,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Enterprise Admins,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Domain Admins)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Domain Admins,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Domain Admins,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Account Operators)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Account Operators,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Account Operators,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Backup Operators)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Backup Operators,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Backup Operators,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Administrators)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Administrators,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Administrators,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (DNSAdmins)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=DNSAdmins,CN=Users,$baseDN$)" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=DNSAdmins,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Group Policy Creator Owners)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Group Policy Creator Owners,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Group Policy Creator Owners,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Schema Admins)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Schema Admins,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Schema Admins,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Incoming Forest Trust Builders)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Incoming Forest Trust Builders,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Incoming Forest Trust Builders,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Network Configuration Operators)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Network Configuration Operators,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Network Configuration Operators,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Remote Desktop Users)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Remote Desktop Users,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Remote Desktop Users,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Admin Group Recursive Membership (Server Operators)]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(memberOf:1.2.840.113556.1.4.1941:=CN=Server Operators,CN=Users,$baseDN$))" domain=$domain$ attrs="name,sAMAccountName,objectCategory,objectClass,objectSID"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:admin_groups\",\"taskid\":\"".now()."\",\"admin_group_dn\":\"CN=Server Operators,CN=Users,".baseDN."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - Computer Summary]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
schedule_window = auto
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(objectCategory=computer))" domain=$domain$ attrs="name,sAMAccountName,description,objectCategory,objectClass,objectSID,distinguishedName,operatingSystem,operatingSystemServicePack,operatingSystemVersion,useraccountcontrol,pwdLastSet,whenChanged,whenCreated,lastlogontimestamp,dNSHostName,userCertificate,memberOf"\
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:computers\",\"taskid\":\"".now()."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
|  collect `activedirectory_index` output_format=hec

[ActiveDirectory - Group Summary]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
schedule_window = auto
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(objectCategory=group))" domain=$domain$ attrs="name,sAMAccountName,description,objectCategory,objectClass,objectSID,distinguishedName,managedBy,mail,member,memberOf,whencreated,whenchanged" \
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:groups\",\"taskid\":\"".now()."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec

[ActiveDirectory - User Summary]
action.logevent.param.event = $result._raw$
action.logevent.param.index = activedirectory
action.logevent.param.sourcetype = _json
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = security_dashboards
request.ui_dispatch_view = search
schedule_window = auto
search = | inputlookup ldap_domains.csv WHERE enabled=1\
| fields - enabled\
| ldapfilter search="(&(objectClass=user)(objectCategory=person))" domain=$domain$ attrs="name,sAMAccountName,description,objectCategory,objectClass,objectSID,distinguishedName,mail,title,manager,info,physicalDeliveryOfficeName,department,company,lastLogonTimestamp,whencreated,whenchanged,pwdLastSet,userAccountControl,primaryGroupId,userWorkstations,userCertificate,memberOf" \
| tojson\
| eval _raw = replace(_raw,"^{","{\"query_type\":\"activedirectory:users\",\"taskid\":\"".now()."\",") \
| eval _raw = replace(_raw,"\:\[\]",":\"\"")\
| foreach * \
    [ \
    | eval _raw=replace(_raw,"<<FIELD>>", lower("<<FIELD>>"))\
    ] \
| fields _raw\
| collect `activedirectory_index` output_format=hec